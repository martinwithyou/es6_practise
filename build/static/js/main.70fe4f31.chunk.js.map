{"version":3,"sources":["Component/Head.js","Component/Body.js","Component/Foot.js","Component/Heigh.js","Component/Width.js","Component/Inner.js","Component/Outter.js","Component/String.js","Component/Number.js","App.js","serviceWorker.js","index.js"],"names":["Head","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","opacity","setNewNumber","bind","assertThisInitialized","console","log","newProps","newState","nextProps","nextState","prevProps","prevState","react_default","a","createElement","className","Component","Body","Foot","Height","Width","Inner","Outter","StringComponent","NumberComponent","Math","sinh","App","Component_Head","Component_Body","Component_Foot","Heigh","Component_Width","Component_Inner","Component_Outter","Component_String","Component_Number","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4QAoKeA,oBAhKb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,QAAS,GAEXR,EAAKS,aAAeT,EAAKS,aAAaC,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KALHA,4HA2HjBY,QAAQC,IAAI,qEAIXD,QAAQC,IAAI,0EAGWC,GACtBF,QAAQC,IAAI,+EAGMC,EAAUC,GAC5B,OAAO,8CAGSC,EAAWC,GAC3BL,QAAQC,IAAI,qEAGGK,EAAWC,GAC1BP,QAAQC,IAAI,wEAIXD,QAAQC,IAAI,4DAIf,OACEO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,kCA1JSE,cC2FJC,cA3FX,SAAAA,EAAY1B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsB,IACfzB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwB,GAAAnB,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,QAAS,GAHIR,iIA4DfY,QAAQC,IAAI,0EAGUC,GACtBF,QAAQC,IAAI,+EAGMC,EAAUC,GAC5B,OAAO,8CAGSC,EAAWC,GAC3BL,QAAQC,IAAI,qEAGGK,EAAWC,GAC1BP,QAAQC,IAAI,wEAIZD,QAAQC,IAAI,4DAGb,OACKO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,kCAtFGE,aC2DJE,iOARX,OACEN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,kCArDSE,aCyCJG,iOARX,OACEP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,oCAnCWE,aC8ENI,iOARX,OACER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,oCAvEUE,aC0BLK,iOARX,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,oCArBUE,aC4GLM,iOARX,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,qCAtGWE,aCsHNO,iOARP,OACIX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,qCAhHcE,aC+JfQ,+LAXfpB,QAAQC,IAAIoB,KAAKC,KAAK,sCAGlB,OACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,8CAzJoBE,aCiCfW,mLAhBX,OACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACc,EAAD,MACAhB,EAAAC,EAAAC,cAACe,EAAD,MACAjB,EAAAC,EAAAC,cAACgB,EAAD,MACAlB,EAAAC,EAAAC,cAACiB,EAAD,MACAnB,EAAAC,EAAAC,cAACkB,EAAD,MACApB,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACoB,EAAD,MACAtB,EAAAC,EAAAC,cAACqB,EAAD,MACAvB,EAAAC,EAAAC,cAACsB,EAAD,cAbUpB,aCJEqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/B,EAAAC,EAAAC,cAAC8B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.70fe4f31.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './index.css';\n\nclass Head extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      opacity: 1.0\n    };\n    this.setNewNumber = this.setNewNumber.bind(this);\n  }\n\n  setNewNumber() {\n    //  console.log(\"this is button\");\n    //  for(var i=0; i<10; i++){\n    //   //console.log(\"i______\",i);\n    //  }\n    //  console.log(\"i______\",i);\n    // var a = [];\n    // for(let i = 0; i<10;i++){\n    //   a[i] = function(){\n    //     console.log(i);\n    //   }\n    // }\n    // console.log(foo);\n    // var foo = 2;\n\n    // console.log(bar);\n    // let bar= 2;\n    // var tmp = 123;\n    // if(true){\n    //   tmp = 'abc';\n    //   let tmp;\n    // }\n\n    // if(true){\n\n    //   tmp = 'abc';\n    //   console.log(tmp);\n\n    //   let tmp;\n    //   console.log(tmp);\n\n    //   tmp =123;\n    //   console.log(tmp)\n    // }\n\n    // function func(){\n    //   let a =10;\n    //   let a =1;\n    // }\n\n    // function func(arg){\n    //   let arg\n    // }\n\n    // function func(arg){\n    //     {\n    //       let arg\n    //     }\n    // }\n\n    // var tmp = new Date();\n    // function f(){\n    //   console.log(tmp);\n    //   if(false){\n    //     var tmp = 'hello world'\n    //   }\n    // }\n    //f();\n\n    // var s = 'hello';\n    // for(var i= 0;i<s.length;i++){\n    //   console.log(s[i]);\n    // }\n    // console.log(i);\n\n    // function f1(){\n    //   let n = 5;\n    //   if(true){\n    //     let n = 10;\n    //   }\n    //   console.log(n);\n    // }\n    // f1();\n\n    //{{{{{{let insance = 'hello world' }}}}}};\n\n    // {{{{\n    //   {let insance = 'hello world'}\n    //   console.log(insance);\n    // }}}}\n\n    // {{{{\n    //   let insane ='hello world';\n    //   {let insane = 'helloworld'}\n    // }}}}\n   \n    // function f(){ console.log('i am outside')}\n\n    // (function(){\n    //   if(false){\n    //     function f(){console.log('i am outside');}\n    //   }\n\n    //   f();\n    // }());\n\n    //函数声明语句\n    {\n      let a = 'sesret';\n      function f(){\n        return a;\n      }\n    }\n\n    //函数表达式\n    {\n      let a = 'secret';\n      let f = function(){\n        return a;\n      }\n    }\n\n  }\n\n  componentWillMount() {\n    console.log('Component WILL MOUNT!')\n  }\n\n  componentDidMount() {\n     console.log('Component DID MOUNT!')\n  }\n\n  componentWillReceiveProps(newProps) {\n      console.log('Component WILL RECEIVE PROPS!')\n  }\n\n  shouldComponentUpdate(newProps, newState) {\n      return true;\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n      console.log('Component WILL UPDATE!');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n      console.log('Component DID UPDATE!')\n  }\n\n  componentWillUnmount() {\n       console.log('Component WILL UNMOUNT!')\n  }\n\n  render() {\n    return (\n      <div className=\"head\">\n          <h1>you are head</h1>\n          {/* <button onClick={this.setNewNumber}>button</button> */}\n      </div>\n    );\n  }\n}\n\nexport default Head;\n","import React, { Component } from 'react';\nimport './index.css';\nclass Body extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          opacity: 1.0\n        };\n    }\n    componentWillMount() {\n        //const\n\n        //console.log('Component WILL MOUNT!')\n        //const PI =3.1415;\n        //PI = 3;\n        //const 声明一个只读的常量，常量的值一旦声明，就不能改变\n        //const foo;\n        // if(true){\n        //    const max = 5;\n        // }\n        // console.log(max);\n\n        // var message = 'hello';\n        // let age =25;\n\n        // const message = 'goodbye';\n        // const age = 30;\n\n        // const foo = {};\n        // foo.props =123\n        // console.log(foo);\n\n        // foo={};\n\n        // const a = [];\n        // a.push('hello');\n        // a.length = 0;\n        // a =['dive']\n\n\n\n        //对象冻结\n        // const foo = Object.freeze({});\n        // foo.props = 123;\n\n        //另外一种对象冻结\n        // var constantize = (obj) => {\n        //    Object.freeze(obj);\n        //    Object.keys(obj).forEach( (key , i)=>{\n        //         if(typeof obj[key] === 'object'){\n        //            constantize( obj[key]);\n        //         }\n        //    })\n        // }\n\n        // var a = 1;\n        // console.log(window.a);\n\n        // let b = 1;\n        // console.log(window.b);\n    }\n    \n    componentDidMount() {\n        console.log('Component DID MOUNT!')\n    }\n    \n    componentWillReceiveProps(newProps) {\n        console.log('Component WILL RECEIVE PROPS!')\n    }\n    \n    shouldComponentUpdate(newProps, newState) {\n        return true;\n    }\n    \n    componentWillUpdate(nextProps, nextState) {\n        console.log('Component WILL UPDATE!');\n    }\n    \n    componentDidUpdate(prevProps, prevState) {\n        console.log('Component DID UPDATE!')\n    }\n    \n    componentWillUnmount() {\n        console.log('Component WILL UNMOUNT!')\n    }\n    render() {\n       return (\n            <div className=\"body\">\n                <h1>you are Body</h1>\n            </div>\n        );\n    }\n}\n\nexport default Body;\n","import React, { Component } from 'react';\n\nclass Foot extends Component {\n  componentWillMount() {\n    //'Destructuring______\n      \n    // let [a, b, c] =[1, 2, 3];\n    // console.log(a);\n    // console.log(b);\n    // console.log(c);\n\n    // let [foo, [[bar], baz]] = [1,[[2], 3]];\n    // console.log(foo);\n    // console.log(bar);\n    // console.log(baz);\n\n    // let [x, ,y] =[1,2,3];\n    // console.log(x);\n    // console.log(y);\n\n    // let [head, ...tail] =[1,2,3,4];\n    // console.log(head);\n    // console.log(tail);\n\n    // let [x, y, ...z] =['a'];\n    // console.log(x);\n    // console.log(y);\n    // console.log(z);\n\n    // let [foo] = []\n    // console.log(foo);\n\n    // let [bar, foo] =[1];\n    // console.log(foo);\n\n    // let [x, y] =[1,2,3]\n    // console.log(x);\n    // console.log(y);\n\n    // let [a, [b], d] = [1,[2,3], 4];\n    // console.log(a);\n    // console.log(b);\n    // console.log(d);\n\n    //set数据结构的结构赋值\n    // let [x,y,z] = new Set(['a','b','c']);\n    // console.log(x);\n    // console.log(y);\n    // console.log(z);\n\n\n  }\n  render() {\n    return (\n      <div className=\"foot\">\n          <h1>you are Foot</h1>\n      </div>\n    );\n  }\n}\n\nexport default Foot;\n","import React, { Component } from 'react';\n\nclass Height extends Component {\n  componentWillMount() {\n  //默认值\n//   let [foo = true ] =[];\n//   console.log(foo);\n   \n//   let [x, y='b'] = ['a'];\n//   console.log(x);\n//   console.log(y);\n\n//   let [x, y='b'] = ['a',undefined];\n//   console.log(x);\n//   console.log(y);\n\n//   let [x =1 ]=[undefined];\n//   console.log(x);\n\n// let [x = 1 ] = [null];\n// console.log(x);\n\n// function f(){\n//     console.log('aaa');\n// }\n// let [ x = f() ]= [1];\n// console.log(x);\n\nlet [x=1, y=x] =[];\n//let [x =1, y=x] =[2];\n//let [x=1,y=x] =[1,2];\n//let [x=y,y=1] =[];\n\n}\nrender() {\n    return (\n      <div className=\"foot\">\n          <h1>you are Heigh </h1>\n      </div>\n    );\n}\n}\n\nexport default Height;\n","import React, { Component } from 'react';\nimport './index.css';\n\nclass Width extends Component {\n\ncomponentWillMount() {\n   //es6 对象的结构赋值\n\n//    let { foo, bar} ={ foo:\"aaa\", bar:\"bbb\"};\n//    console.log(foo);\n//    console.log(bar); \n\n// let { baz } = { foo:'aaa', bar:'bbb'};\n// console.log(baz);\n\n// let {foo: baz} ={foo:'aaa', bar:'bbb'};\n// console.log(baz);\n\n// let obj = {first:'hello',last:'world'}\n// let {first:f, last:l} =obj;\n// console.log(f);\n// console.log(l);\n\n// let {foo:baz}={foo:'aaa', bar:'bbb'};\n// console.log(baz);\n//console.log(foo);\n\n// let obj = {\n//   p:[\n//       'hello',\n//       {y:'world'}\n//   ]\n// };\n\n// let {p:[x,{y}]} =obj;\n// console.log(x);\n// console.log(y);\n\n// let obj = {\n//     p:[\n//         'hello',\n//         {y:'world'}\n//     ]\n// };\n\n// let {p, p:[x,{y}]} = obj;\n// console.log(x);\n// console.log(y);\n// console.log(p);\n\n// const node = {\n//     loc:{\n//         start:{\n//             line:1,\n//             column:5\n//         }\n//     }\n// }\n\n// let {loc,loc:{start}, loc:{start:{line}} } = node;\n// console.log(line);\n// console.log(loc);\n// console.log(start);\n\nlet obj = {};\n\nlet arr = [];\n\n({ foo: obj.prop, bar: arr[0] } = { foo: 123, bar: true });\n\n}\n  render() {\n    return (\n      <div className=\"foot\">\n          <h1>you are Width </h1>\n      </div>\n    );\n  }\n}\n\nexport default Width;\n","import React, { Component } from 'react';\n\nclass Inner extends Component {\n  componentWillMount() {\n  \n  //字符串结构符串\n//   const [a, b, c, d, e] = 'hello';\n\n//   console.log(a);\n//   console.log(b);\n//   console.log(c);\n//   console.log(d);\n//   console.log(e);\n\n//   let {length: len}='hello';\n//   console.log(len);\n\n\n\n}\nrender() {\n    return (\n      <div className=\"foot\">\n          <h1>you are Inner </h1>\n      </div>\n    );\n}\n}\n\nexport default Inner;\n","import React, { Component } from 'react';\n\nclass Outter extends Component {\n  componentWillMount() {\n  \n  //数组和布尔值的结构赋值\n//   let { toString :s}=123;\n//   console.log(s===Number.prototype.toString);\n\n//   let { toString : sS}=true;\n//   console.log(sS===Boolean.prototype.toString);\n\n//函数的参数的结构赋值\n// function add([x,y]){\n//     return x+y\n// }\n// console.log( add([1,2]) );\n\n//console.log([ [1,2],[3,4]].map( (a,b)=> a+b) )\n\n// function move( {x,y}= {x:0, y:0}){\n//     return [x,y];\n// }\n// console.log( move({x:3,y:8}) );\n// console.log( move({x:3}) );\n// console.log( move({}) );\n// console.log( move() );\n\n//console.log( [1, undefined, 3].map( (x='yes')=>x) );\n\n//解构赋值的用途\n//交换变量的值\n// let x =1;\n// let y =2;\n// [x,y]=[y,x];\n// console.log([x,y]);\n\n//从函数返回多个值\n// function example(){\n//     return [1,2,3]\n// }\n// let [a,b,c] =example();\n// console.log([a,b,c]);\n\n//返回一个对象\n// function example(){\n//     return{\n//         foo:1,\n//         bar:2\n//     }\n// }\n// let {foo, bar} = example();\n// console.log(foo);\n// console.log(bar);\n\n//函数参数的定义\n// function f([x,y,z]){\n//     return x+y+z\n// }\n// console.log(f([1,2,3]));\n\n// function f({x,y,z}){\n//     return x+y+z\n// }\n// console.log( f({x:3,y:7,z:9})   )\n\n//提取json\n// let jsonData = {\n//     id:42,\n//     status:'ok',\n//     data:[867,5309]\n// }\n\n// let {id, status,data:number}=jsonData;\n// console.log(id, status, number)\n\n//函数的默认值\n// jQuery.ajax = function (url, {\n//     async =true,\n//     beforeSend = function(){},\n//     cache = function(){},\n//     complete=function(){},\n//     crossDomain= false,\n//     glibal=true\n// }){\n\n// }\n\n//遍历map结构\n// const map = new Map();\n// map.set('first','hello');\n// map.set('second','world');\n// for(let [key, value] of map){\n//     console.log(key+'____is____'+value)\n// }\n\n//结构赋值\n//const {sourceMapConsumer, SourceNode}= require(\"source-map\");\n\n\n}\nrender() {\n    return (\n      <div className=\"foot\">\n          <h1>you are Outter </h1>\n      </div>\n    );\n}\n}\n\nexport default Outter;\n","import React, { Component } from 'react';\n\nclass StringComponent extends Component {\n   componentWillMount() {\n  \n    //字符串Unicode表示法\n    //alert('\\u0061')\n\n    //codePointAt()\n    // var s = \"𠮷\";\n    // console.log(s.length);\n    // console.log(s.charAt(0));\n    // console.log(s.charAt(1));\n    // console.log(s.charCodeAt(0));\n    // console.log(s.charCodeAt(1));\n\n    // let s = '𠮷a';\n    // console.log(s.codePointAt(0));\n    // console.log(s.codePointAt(1));\n    // console.log(s.codePointAt(2));\n\n    // console.log(s.codePointAt(0).toString(16));\n    // console.log(s.codePointAt(1).toString(16));\n    // console.log(s.codePointAt(2).toString(16));\n\n   \n    // for (let ch of s) {\n    //     console.log(ch.codePointAt(0).toString(16));\n    // }\n\n    //String.fromCodePoint()\n    //console.log(String.fromCodePoint(0x78,0x1f680,0x79));\n\n    //for....of\n    // for(let codePoint of 'foo'){\n    //     console.log(codePoint)\n    // }\n\n    // let text =String.fromCodePoint(0x20BB7)\n    // for(let i of text){\n    //     console.log(i)\n    // }\n\n    //includes(), startsWith(), endsWith()\n    // let s = 'Hello world!';\n    // console.log(s.startsWith('Hello'))\n    // console.log(s.endsWith('!'))\n    // console.log(s.includes('o'))\n\n    // 这三个方法都支持第二个参数，表示开始搜索的位置。\n    // console.log(s.startsWith('Hello',6))\n    // console.log(s.endsWith('!',0))\n    // console.log(s.includes('o',9))\n\n    //repeat\n\n    // console.log(\"hello____\".repeat(8.9) );\n    // console.log(\"hello____\".repeat(-8) );\n    // console.log(\"hello____\".repeat(-9) );\n    // console.log(\"hello____\".repeat(NaN) );\n    // console.log(\"hello____\".repeat('na') );\n    // console.log(\"hello____\".repeat('3') );\n\n\n    //padStart() padEnd()\n    // console.log('x'.padStart(5,'ab'));\n    // console.log('x'.padStart(4,'ab'));\n    // console.log('x'.padEnd(5,'ab'));\n    // console.log('x'.padEnd(4,'ab'))\n\n    // console.log('12'.padStart(10, 'YYYY-MM-DD'));\n    // console.log('09-12'.padStart(10, 'YYYY-MM-DD'));\n\n    // console.log('1'.padStart(10, '0') );\n    // console.log('12'.padStart(10, '0') );\n    // console.log('123456'.padStart(10, '0'));\n\n    //matchAll()\n    //返回一个正则表达式在当前字符串所有的匹配\n\n    //模版字符串\n    // let x = 1;\n    // let y = 2;\n\n    // console.log(`${x} + ${y} = ${x + y}`)\n    // // \"1 + 2 = 3\"\n\n    // console.log(`${x} + ${y * 2} = ${x + y * 2}`)\n    //  // \"1 + 4 = 5\"\n\n    // let obj = {x: 1, y: 2};\n    // console.log(`${obj.x + obj.y}`);\n    // // \"3\"\n\n    // function fn(){\n    //     return \"hello world\"\n    // }\n    // console.log(`f00_${fn()}_bar`)\n\n    //模版编译字符串\n    // let template = `\n    //     <ul>\n    //     <% for(let i=0; i < data.supplies.length; i++) { %>\n    //     <li><%= data.supplies[i] %></li>\n    //     <% } %>\n    //     </ul>\n    // `;\n\n    //标签模版字符串\n\n   }\n    render() {\n        return (\n            <div className=\"foot\">\n                <h1>you are string </h1>\n            </div>\n        );\n    }\n}\n\nexport default StringComponent;\n","import React, { Component } from 'react';\n\nclass NumberComponent extends Component {\n  componentWillMount() {\n  \n  //数值的拓展\n\n  //二进制和8进制的表示法\n//   console.log(0b111110111 === 503);\n//   console.log(0o767 === 503 );\n\n//   console.log(Number('0b111') ) // 7\n//   console.log( Number('0o10') )\n\n//   Number.isFinite(), Number.isNaN()\n// console.log( Number.isFinite(15) ); // true\n// Number.isFinite(0.8); // true\n// Number.isFinite(NaN); // false\n// console.log( Number.isFinite(Infinity) ); // false\n// Number.isFinite(-Infinity); // false\n// Number.isFinite('foo'); // false\n// Number.isFinite('15'); // false\n// Number.isFinite(true); // false\n\n// console.log( Number.isNaN(NaN)) // true\n// console.log( Number.isNaN(15) )// false\n// Number.isNaN('15') // false\n// Number.isNaN(true) // false\n// Number.isNaN(9/NaN) // true\n// Number.isNaN('true' / 0) // true\n// Number.isNaN('true' / 'true') // true\n\n//Number.parseInt()\n//Number.parseFloat()\n//console.log(Number.parseInt('12.34') );\n//console.log( Number.parseFloat('123.45#'));\n\n//Number.isInteger()\n//判断是否为整数\n//console.log(Number.isInteger(25)) // true\n//console.log(Number.isInteger(25.1) )// false\n//Number.isInteger(5E-324) // false\n//Number.isInteger(5E-325) // true\n//console.log(Number.isInteger(5E-324));\n//console.log(Number.isInteger(5E-325))\n\n//console.log(Number.EPSILON)\n// 0.1 + 0.2\n// // 0.30000000000000004\n\n// 0.1 + 0.2 - 0.3\n// // 5.551115123125783e-17\n\n// 5.551115123125783e-17.toFixed(20)\n\n// function withinErrorMargin (left, right) {\n//     return Math.abs(left - right) < Number.EPSILON * Math.pow(2, 2);\n// }\n  \n//   0.1 + 0.2 === 0.3 // false\n//   withinErrorMargin(0.1 + 0.2, 0.3) // true\n  \n//   1.1 + 1.3 === 2.4 // false\n//   withinErrorMargin(1.1 + 1.3, 2.4) // true\n\n//Number.isSafeInteger()\n//console.log( Math.pow(2, 53) );\n//console.log( Math.pow(2, 53) === Math.pow(2, 53) + 1 );\n\n//安全整数\n\n// console.log( Number.MAX_SAFE_INTEGER === Math.pow(2, 53) - 1 )\n// // true\n// console.log( Number.MAX_SAFE_INTEGER === 9007199254740991 )\n// // true\n\n// console.log( Number.MIN_SAFE_INTEGER === -Number.MAX_SAFE_INTEGER )\n// // true\n// console.log( Number.MIN_SAFE_INTEGER === -9007199254740991 )\n// // true\n// Number.isSafeInteger('a') // false\n// Number.isSafeInteger(null) // false\n// Number.isSafeInteger(NaN) // false\n// Number.isSafeInteger(Infinity) // false\n// Number.isSafeInteger(-Infinity) // false\n\n// Number.isSafeInteger(3) // true\n// Number.isSafeInteger(1.2) // false\n// Number.isSafeInteger(9007199254740990) // true\n// Number.isSafeInteger(9007199254740992) // false\n\n// Number.isSafeInteger(Number.MIN_SAFE_INTEGER - 1) // false\n// Number.isSafeInteger(Number.MIN_SAFE_INTEGER) // true\n// Number.isSafeInteger(Number.MAX_SAFE_INTEGER) // true\n// Number.isSafeInteger(Number.MAX_SAFE_INTEGER + 1) // false\n\n\n\n\n//Math对象的扩展\n// console.log(Math.trunc(4.1));\n// let a = Math.trunc(-4.9);\n// console.log(a);\n// console.log( Math.trunc('123.456') )// 123\n// console.log( Math.trunc(true) )//1\n// console.log( Math.trunc(false) )// 0\n// console.log( Math.trunc(null) )// 0\n\n//Math.sign()\n//Math.sign方法用来判断一个数到底是正数、负数、还是零。对于非数值，会先将其转换为数值。\n//console.log( Math.sign(-5) );\n//console.log( Math.sign(5) );\n\n//Math.cbrt()\n//Math.cbrt方法用于计算一个数的立方根。\n//console.log( Math.cbrt(27) );\n\n\n//Math.clz32(1000)\n//JavaScript 的整数使用 32 位二进制形式表示\n//console.log(Math.clz32(14444444444000))\n//Math.imul()\n//Math.imul方法返回两个数以 32 位带符号整数形式相乘的结果，返回的也是一个 32 位的带符号整数。\n//console.log( Math.imul(2, 4) );\n//Math.hypot() \n//Math.hypot方法返回所有参数的平方和的平方根\n//Math.fround() \n//Math.fround方法返回一个数的32位单精度浮点数形式\n\n//对数方法\n//Math.expm1()\n//Math.log1p()\n//Math.log10()\n//Math.log2()\n\n//三角函数\n// Math.sinh(x) 返回x的双曲正弦（hyperbolic sine）\n// Math.cosh(x) 返回x的双曲余弦（hyperbolic cosine）\n// Math.tanh(x) 返回x的双曲正切（hyperbolic tangent）\n// Math.asinh(x) 返回x的反双曲正弦（inverse hyperbolic sine）\n// Math.acosh(x) 返回x的反双曲余弦（inverse hyperbolic cosine）\n// Math.atanh(x) 返回x的反双曲正切（inverse hyperbolic tangent）\n\n//指数运算符\n//ES2016 新增了一个指数运算符（**）\n// console.log( 2 ** 3 ** 2 );\n// let b = 4;\n// b **= 3;\n// console.log(b);\n\nconsole.log(Math.sinh(90));\n}\nrender() {\n    return (\n      <div className=\"foot\">\n          <h1>you are NumberComponent </h1>\n      </div>\n    );\n}\n}\n\nexport default NumberComponent;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Head from './Component/Head.js';\nimport Body from './Component/Body.js';\nimport Foot from './Component/Foot.js';\nimport Heigh from './Component/Heigh.js';\nimport Width from './Component/Width.js';\nimport Inner from './Component/Inner.js';\nimport Outter from './Component/Outter.js';\nimport StringComponent from './Component/String.js';\nimport NumberComponent from './Component/Number.js';\n\n\n\n\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Head />\n        <Body />\n        <Foot />\n        <Heigh />\n        <Width />\n        <Inner />\n        <Outter />\n        <StringComponent />\n        <NumberComponent />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}